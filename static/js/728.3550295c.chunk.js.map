{"version":3,"file":"static/js/728.3550295c.chunk.js","mappings":"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","sources":["components/Markdown.tsx","components/PostList.tsx","pages/BasePage.tsx","util/css.ts","pages/PostPage.tsx","util/hooks/use_async_memo.ts"],"sourcesContent":["import { lazy, Suspense } from \"react\";\nimport { CodeComponent } from \"react-markdown/lib/ast-to-react\";\n\nimport highlighterStyle from \"react-syntax-highlighter/dist/esm/styles/prism/darcula\";\n\nconst ReactMarkdown = lazy(() => import(\"react-markdown\"));\nconst SyntaxHighlighter = lazy(() =>\n    import(\"react-syntax-highlighter\").then(rsh => ({ default: rsh.PrismAsync }))\n);\n\nexport interface MarkdownProps {\n    content: string;\n}\n\nconst CODE_COMPONENT: CodeComponent = ({ node, inline, className, children, ...props }) => {\n    const match = /language-(\\w+)/.exec(className || \"\");\n    return !inline && match ? (\n        <Suspense\n            fallback={\n                <code className={className} {...props}>\n                    {children}\n                </code>\n            }\n        >\n            <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                language={match[1]}\n                style={highlighterStyle}\n                PreTag=\"div\"\n            />\n        </Suspense>\n    ) : (\n        <code className={className} {...props}>\n            {children}\n        </code>\n    );\n};\n\nexport default function Markdown(props: MarkdownProps) {\n    const { content } = props;\n    return (\n        <Suspense fallback={content}>\n            <ReactMarkdown\n                components={{\n                    code: CODE_COMPONENT,\n                }}\n            >\n                {content}\n            </ReactMarkdown>\n        </Suspense>\n    );\n}\n","import { formatDistanceToNow } from \"date-fns/esm\";\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { PostMetadata } from \"../posts\";\n\nexport interface PostListProps {\n    posts: PostMetadata[];\n}\n\nconst RootDiv = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    grid-gap: 0.3em 1em;\n    font-size: 0.8em;\n`;\n\nconst TitleSpan = styled.span``;\n\nexport default function PostList(props: PostListProps) {\n    const { posts } = props;\n    return <RootDiv>{posts.map(p => renderPostListItem(p))}</RootDiv>;\n\n    function renderPostListItem(post: PostMetadata) {\n        const timeDistance = formatDistanceToNow(post.createdAt, { addSuffix: true });\n\n        return (\n            <Fragment>\n                <Link to={`/post/${post.plug}`}>\n                    <TitleSpan>{post.title}</TitleSpan>\n                </Link>\n\n                <span>{timeDistance}</span>\n            </Fragment>\n        );\n    }\n}\n\nexport interface PostListItemProps {\n    post: PostMetadata;\n}\n","import { sortBy, take } from \"lodash\";\nimport { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport malooLogo from \"../assets/Logo.png\";\nimport PostList from \"../components/PostList\";\nimport { POSTS } from \"../posts\";\nimport { middleChildSelector } from \"../util/css\";\n\nconst BorderDiv = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n\n    background-image: linear-gradient(\n        -45deg,\n        #eda3ec,\n        #c765c8,\n        #855cd2,\n        #613fb6,\n        #c765c8,\n        #eda3ec,\n        #f2b5cf\n    );\n    background-size: cover;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    align-content: stretch;\n    justify-content: center;\n\n    overflow-y: auto;\n`;\n\nconst InnerDiv = styled.div`\n    border-radius: 16px;\n    margin: 16px;\n    max-width: 1200px;\n    flex-grow: 1;\n    background-image: radial-gradient(#515257, #3b3846);\n    background-size: cover;\n\n    justify-self: center;\n\n    display: grid;\n    grid-template:\n        \"header header header\" auto\n        \"body   body   latest-posts\" 1fr\n        \"footer footer footer\" auto\n        / 1fr auto auto;\n`;\n\nconst LogoImg = styled.img`\n    margin: 1em 0;\n    width: min(90%, 900px);\n`;\n\nconst HeaderDiv = styled.div`\n    justify-self: center;\n    grid-area: header;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;\n\nconst BodyDiv = styled.div`\n    grid-area: body;\n    flex-grow: 1;\n    margin: 0 2em 2em 2em;\n`;\n\nconst LatestPostsDiv = styled.div`\n    grid-area: latest-posts;\n\n    & > div {\n        display: flex;\n        flex-direction: column;\n        grid-area: latest-posts;\n        padding: 1.25em;\n        margin: 0 2em 2em 0em;\n        border-radius: 2em;\n        border: 1px solid #646075;\n\n        background-color: #3b3846;\n\n        & > h3 {\n            margin: 0 0 0.5em 0;\n            padding: 0;\n\n            text-align: center;\n        }\n    }\n`;\n\nconst FooterDiv = styled.div`\n    font-size: 8pt;\n\n    align-self: stretch;\n\n    display: grid;\n    grid-area: footer;\n    grid-template-columns: 1fr 1fr 1fr;\n\n    *:first-child {\n        justify-self: start;\n    }\n\n    *${middleChildSelector} {\n        justify-self: center;\n    }\n\n    *:last-child {\n        justify-self: end;\n    }\n\n    padding: 0.5em 1em;\n    margin: 0 1em;\n    border-top: 2px solid #7365a6;\n`;\n\nexport interface BasePageProps {\n    title?: string;\n    children?: React.ReactNode;\n}\n\nexport default function BasePage(props: BasePageProps) {\n    const latestPosts = useMemo(\n        () =>\n            take(\n                sortBy(POSTS, p => p.updatedAt ?? p.createdAt),\n                5\n            ),\n        []\n    );\n\n    return (\n        <BorderDiv>\n            <InnerDiv>\n                <HeaderDiv>\n                    <LogoImg loading=\"lazy\" src={malooLogo} />\n                </HeaderDiv>\n                <BodyDiv>{props.children}</BodyDiv>\n                <LatestPostsDiv>\n                    <div>\n                        <h3>Latest Posts</h3>\n                        <PostList posts={latestPosts} />\n                    </div>\n                </LatestPostsDiv>\n\n                <FooterDiv>\n                    <div></div>\n                    <div>\n                        <span>&copy; 2022 Malooski</span>\n                    </div>\n                    <div></div>\n                </FooterDiv>\n            </InnerDiv>\n        </BorderDiv>\n    );\n}\n","export const middleChildSelector = \":not(:first-child):not(:last-child)\";\n","import axios from \"axios\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport styled from \"styled-components\";\nimport Markdown from \"../components/Markdown\";\nimport { PostMetadata } from \"../posts\";\nimport { useAsyncMemo } from \"../util/hooks/use_async_memo\";\nimport BasePage from \"./BasePage\";\n\nconst RootDiv = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 0px;\n    margin: 0px;\n\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Title = styled.h1`\n    font-size: 2em;\n    margin: 0.2em 0;\n    padding: 0;\n\n    justify-self: center;\n    grid-area: title;\n`;\n\nconst PostInfoDiv = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nconst TagSpan = styled.span`\n    font-size: 0.75em;\n    padding: 0.3em 0.6em;\n    background-color: #7365a6;\n    color: white;\n    border-radius: 1em;\n`;\n\nconst TagsDiv = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n\nconst DateSpan = styled.span`\n    font-style: italic;\n`;\n\nconst HeaderDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    padding: 1em;\n    border-radius: 1em;\n\n    background-image: linear-gradient(transparent, rgba(0, 0, 0, 0.2));\n`;\ninterface PostPageProps {\n    post: PostMetadata;\n}\n\nasync function getPostContents(contentUrl: string): Promise<string> {\n    const response = await axios.get(contentUrl);\n\n    return response.data;\n}\n\nexport default function PostPage(props: PostPageProps) {\n    const { post } = props;\n    const text = useAsyncMemo<string>(() => getPostContents(post.contentUrl), [post.contentUrl]);\n    const tags = post.tags ?? [];\n\n    const updatedAtDate = (post.updatedAt ?? post.createdAt).toString();\n    const updatedAtText = formatDistanceToNow(post.updatedAt ?? post.createdAt, {\n        addSuffix: true,\n    });\n\n    return (\n        <BasePage title={post.title}>\n            <RootDiv>\n                <HeaderDiv>\n                    <Title>{post.title}</Title>\n                    <PostInfoDiv>\n                        <DateSpan title={updatedAtDate}>{updatedAtText}</DateSpan>\n                        <TagsDiv>\n                            {tags.map(t => (\n                                <TagSpan>{t}</TagSpan>\n                            ))}\n                        </TagsDiv>\n                    </PostInfoDiv>\n                </HeaderDiv>\n                <Markdown content={text ?? \"\"} />\n            </RootDiv>\n        </BasePage>\n    );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useAsyncMemo<T>(getter: () => Promise<T>, deps: any[]): T | undefined {\n    const [state, setState] = useState<T | undefined>(undefined);\n    useEffect(() => {\n        getter().then(v => {\n            setState(v);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps);\n    return state;\n}\n"],"names":["ReactMarkdown","lazy","SyntaxHighlighter","then","rsh","default","PrismAsync","CODE_COMPONENT","node","inline","className","children","props","match","exec","Suspense","fallback","String","replace","language","style","highlighterStyle","PreTag","Markdown","content","components","code","RootDiv","styled","TitleSpan","PostList","posts","map","p","post","timeDistance","formatDistanceToNow","createdAt","addSuffix","Fragment","to","plug","title","renderPostListItem","BorderDiv","InnerDiv","LogoImg","HeaderDiv","BodyDiv","LatestPostsDiv","FooterDiv","BasePage","latestPosts","useMemo","take","sortBy","POSTS","updatedAt","loading","src","malooLogo","Title","PostInfoDiv","TagSpan","TagsDiv","DateSpan","getPostContents","contentUrl","axios","response","data","PostPage","text","getter","deps","useState","undefined","state","setState","useEffect","v","useAsyncMemo","tags","updatedAtDate","toString","updatedAtText","t"],"sourceRoot":""}